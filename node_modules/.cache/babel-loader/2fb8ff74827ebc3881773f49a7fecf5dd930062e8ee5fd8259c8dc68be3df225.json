{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nova pasta\\\\teste\\\\newapp-coffe\\\\src\\\\contexts\\\\VendasContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/VendasContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VendasContext = /*#__PURE__*/createContext();\nexport function VendasProvider({\n  children\n}) {\n  _s();\n  const [vendas, setVendas] = useState([]);\n\n  // Carregar vendas do localStorage\n  useEffect(() => {\n    const savedVendas = localStorage.getItem('cafeteria_vendas');\n    if (savedVendas) {\n      setVendas(JSON.parse(savedVendas));\n    }\n  }, []);\n\n  // Salvar vendas no localStorage\n  useEffect(() => {\n    localStorage.setItem('cafeteria_vendas', JSON.stringify(vendas));\n  }, [vendas]);\n  const registrarVenda = novaVenda => {\n    const vendaCompleta = {\n      ...novaVenda,\n      id: Date.now(),\n      // ID único\n      dataHora: new Date().toISOString()\n    };\n    setVendas(prevVendas => [...prevVendas, vendaCompleta]);\n    return vendaCompleta;\n  };\n  const getVendasPorPeriodo = (dataInicio, dataFim) => {\n    return vendas.filter(venda => {\n      const dataVenda = new Date(venda.dataHora);\n      return dataVenda >= dataInicio && dataVenda <= dataFim;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(VendasContext.Provider, {\n    value: {\n      vendas,\n      registrarVenda,\n      getVendasPorPeriodo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n// CORREÇÃO: Exporte como useVendas (não useVendas)\n_s(VendasProvider, \"uPimS9TDZhW71MTqFy73eQ+hOcw=\");\n_c = VendasProvider;\nexport function useVendas() {\n  _s2();\n  const context = useContext(VendasContext);\n  if (!context) {\n    throw new Error('useVendas must be used within a VendasProvider');\n  }\n  return context;\n}\n\n// Exporte também o contexto para testes ou uso avançado\n_s2(useVendas, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default VendasContext;\nvar _c;\n$RefreshReg$(_c, \"VendasProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","VendasContext","VendasProvider","children","_s","vendas","setVendas","savedVendas","localStorage","getItem","JSON","parse","setItem","stringify","registrarVenda","novaVenda","vendaCompleta","id","Date","now","dataHora","toISOString","prevVendas","getVendasPorPeriodo","dataInicio","dataFim","filter","venda","dataVenda","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVendas","_s2","context","Error","$RefreshReg$"],"sources":["D:/Nova pasta/teste/newapp-coffe/src/contexts/VendasContext.js"],"sourcesContent":["// src/contexts/VendasContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst VendasContext = createContext();\r\n\r\nexport function VendasProvider({ children }) {\r\n  const [vendas, setVendas] = useState([]);\r\n\r\n  // Carregar vendas do localStorage\r\n  useEffect(() => {\r\n    const savedVendas = localStorage.getItem('cafeteria_vendas');\r\n    if (savedVendas) {\r\n      setVendas(JSON.parse(savedVendas));\r\n    }\r\n  }, []);\r\n\r\n  // Salvar vendas no localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('cafeteria_vendas', JSON.stringify(vendas));\r\n  }, [vendas]);\r\n\r\n  const registrarVenda = (novaVenda) => {\r\n    const vendaCompleta = {\r\n      ...novaVenda,\r\n      id: Date.now(), // ID único\r\n      dataHora: new Date().toISOString()\r\n    };\r\n    \r\n    setVendas(prevVendas => [...prevVendas, vendaCompleta]);\r\n    return vendaCompleta;\r\n  };\r\n\r\n  const getVendasPorPeriodo = (dataInicio, dataFim) => {\r\n    return vendas.filter(venda => {\r\n      const dataVenda = new Date(venda.dataHora);\r\n      return dataVenda >= dataInicio && dataVenda <= dataFim;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <VendasContext.Provider value={{\r\n      vendas,\r\n      registrarVenda,\r\n      getVendasPorPeriodo\r\n    }}>\r\n      {children}\r\n    </VendasContext.Provider>\r\n  );\r\n}\r\n\r\n// CORREÇÃO: Exporte como useVendas (não useVendas)\r\nexport function useVendas() {\r\n  const context = useContext(VendasContext);\r\n  if (!context) {\r\n    throw new Error('useVendas must be used within a VendasProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Exporte também o contexto para testes ou uso avançado\r\nexport default VendasContext;"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAErC,OAAO,SAASO,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAC5D,IAAIF,WAAW,EAAE;MACfD,SAAS,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACpC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,kBAAkB,EAAEF,IAAI,CAACG,SAAS,CAACR,MAAM,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMS,cAAc,GAAIC,SAAS,IAAK;IACpC,MAAMC,aAAa,GAAG;MACpB,GAAGD,SAAS;MACZE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBC,QAAQ,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;IACnC,CAAC;IAEDf,SAAS,CAACgB,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAEN,aAAa,CAAC,CAAC;IACvD,OAAOA,aAAa;EACtB,CAAC;EAED,MAAMO,mBAAmB,GAAGA,CAACC,UAAU,EAAEC,OAAO,KAAK;IACnD,OAAOpB,MAAM,CAACqB,MAAM,CAACC,KAAK,IAAI;MAC5B,MAAMC,SAAS,GAAG,IAAIV,IAAI,CAACS,KAAK,CAACP,QAAQ,CAAC;MAC1C,OAAOQ,SAAS,IAAIJ,UAAU,IAAII,SAAS,IAAIH,OAAO;IACxD,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA,CAACC,aAAa,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAC7BzB,MAAM;MACNS,cAAc;MACdS;IACF,CAAE;IAAApB,QAAA,EACCA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;;AAEA;AAAA9B,EAAA,CA7CgBF,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA8C9B,OAAO,SAASkC,SAASA,CAAA,EAAG;EAAAC,GAAA;EAC1B,MAAMC,OAAO,GAAG1C,UAAU,CAACK,aAAa,CAAC;EACzC,IAAI,CAACqC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB;;AAEA;AAAAD,GAAA,CARgBD,SAAS;AASzB,eAAenC,aAAa;AAAC,IAAAkC,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}